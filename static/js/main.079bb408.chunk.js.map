{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","React","memo","todos","setUserId","useState","todosFromServer","title","filterBy","state","updateState","todosForDisplay","filter","todo","includes","completed","className","TextField","id","label","variant","value","onChange","event","target","FormControl","style","width","InputLabel","Select","labelId","MenuItem","type","onClick","sort","a","b","Math","random","map","userId","todoTitle","key","classNames","name","checked","request","endPoint","fetch","then","response","ok","Error","headers","get","json","catch","error","getUserFromServer","CurrentUser","user","this","props","setState","data","prevProps","email","phone","clearSelectedUserId","Component","App","selectedUserId","setTimeout","length","LinearProgress","src","alt","ReactDOM","render","document","getElementById"],"mappings":"ybAaaA,G,MAAWC,IAAMC,MAAK,YAA2B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UAC3C,EAA6BC,mBAC3B,CACEC,gBAAiBH,EACjBI,MAAO,GACPC,SAAU,KAJd,mBAAOC,EAAP,KAAcC,EAAd,KAQQJ,EAAqCG,EAArCH,gBAAiBC,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAE1BG,EAAkBL,EAAgBM,QAAO,SAAAC,GAAI,MAC7B,mBAAbL,EACHK,EAAKN,MAAMO,SAASP,GACpBM,EAAKN,MAAMO,SAASP,IAAUM,EAAKE,YAAcP,KAGvD,OAEE,yBAAKQ,UAAU,YACb,sCACA,yBAAKA,UAAU,wBACb,kBAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,iBACNC,QAAQ,WACRC,MAAOZ,EAAMF,MACbe,SAAU,SAAAC,GAAK,OAAIb,EAAY,2BAC1BD,GADyB,IAClBF,MAAOgB,EAAMC,OAAOH,YAGlC,kBAACI,EAAA,EAAD,CACEL,QAAQ,WACRM,MAAO,CAAEC,MAAO,MAEhB,kBAACC,EAAA,EAAD,CAAYV,GAAG,qCAAf,aAGA,kBAACW,EAAA,EAAD,CACEC,QAAQ,oCACRZ,GAAG,8BACHC,MAAM,YACNE,MAAOZ,EAAMD,SACbc,SAAU,SAAAC,GAAK,OAAIb,EAAY,2BAC1BD,GADyB,IAClBD,SAAUe,EAAMC,OAAOH,WAGnC,kBAACU,EAAA,EAAD,CAAUV,MAAM,OAAhB,OACA,kBAACU,EAAA,EAAD,CAAUV,OAAK,GAAf,aACA,kBAACU,EAAA,EAAD,CAAUV,OAAO,GAAjB,YAIJ,4BACEW,KAAK,SACLN,MAAO,CAAEC,MAAO,KAChBM,QAAS,kBAAMvB,EAAY,2BACtBD,GADqB,IAExBH,gBAAiBH,EAAM+B,MAAK,SAACC,EAAGC,GAAJ,OAAUC,KAAKC,SAAW,WAL1D,cAWF,yBAAKtB,UAAU,4BACb,wBAAIA,UAAU,kBAEVL,EAAgB4B,KAAI,SAAC1B,GACnB,IAAQE,EAA4CF,EAA5CE,UAAWyB,EAAiC3B,EAAjC2B,OAAeC,EAAkB5B,EAAzBN,MAAkBW,EAAOL,EAAPK,GAE7C,OACE,wBACEwB,IAAKxB,EACLF,UAAW2B,IACT,iBACA,CACE,0BAA2B5B,EAC3B,6BAA8BA,KAKlC,+BACE,2BACEiB,KAAK,WACLY,KAAK,YACLC,QAAS9B,EACTO,SAAU,WAERT,EAAKE,WAAaA,EAClBL,EAAY,2BACPD,GADM,IACCH,gBAAiBH,QAIjC,2BAAIsC,IAEN,4BACET,KAAK,SACLhB,UAAU,iEAKViB,QAAS,kBAAM7B,EAAUoC,KAP3B,YAUGA,c,yBCtHfM,G,MAAU,SAAAC,GAAQ,OAAIC,MAAM,GAAD,OAFhB,kCAEgB,OAAeD,IAC7CE,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,mBAGlB,IAAKF,EAASG,QAAQC,IAAI,gBAAgBxC,SAAS,oBACjD,MAAM,IAAIsC,MAAM,sBAGlB,OAAOF,EAASK,UAEjBC,OAAM,SAAAC,GAAK,OAAIA,OAKLC,EAAoB,SAAAlB,GAAM,OAAIM,EAAQ,UAAD,OAAWN,IAC1DS,MAAK,SAAAC,GAAQ,OAAIA,MCdPS,EAAb,4MACElD,MAAQ,CACNmD,KAAM,MAFV,8FAKE,8BAAAzB,EAAA,6DACUK,EAAWqB,KAAKC,MAAhBtB,OADV,SAEqBkB,EAAkBlB,GAFvC,OAEQoB,EAFR,OAIEC,KAAKE,SAAS,CAAEH,KAAMA,EAAKI,OAJ7B,gDALF,6HAYE,WAAyBC,GAAzB,iBAAA9B,EAAA,yDACUK,EAAWqB,KAAKC,MAAhBtB,OAEJyB,EAAUzB,SAAWA,EAH3B,iEAOqBkB,EAAkBlB,GAPvC,OAOQoB,EAPR,OASEC,KAAKE,SAAS,CAAEH,KAAMA,EAAKI,OAT7B,gDAZF,2EAwBE,WACE,MAAmCH,KAAKpD,MAAMmD,MAAQ,GAA9C1C,EAAR,EAAQA,GAAI0B,EAAZ,EAAYA,KAAMsB,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,MAEzB,OACE,oCAEIN,KAAKpD,MAAMmD,MACT,yBAAK5C,UAAU,eACb,wBAAIA,UAAU,sBACZ,+CAEGE,IAGL,wBAAIF,UAAU,qBAAqB4B,GACnC,uBAAG5B,UAAU,sBAAsBkD,GACnC,uBAAGlD,UAAU,sBAAsBmD,GACnC,4BACEnC,KAAK,SACLhB,UAAU,qBACViB,QAAS4B,KAAKC,MAAMM,qBAHtB,eAzCd,GAAiCnE,IAAMoE,WC0ExBC,E,4MAtEb7D,MAAQ,CACNN,MAAO,GACPoE,eAAgB,G,EAUlBnE,UAAY,SAACc,GACP,EAAKT,MAAM+B,SAAWtB,GAI1B,EAAK6C,SAAS,CACZQ,eAAgBrD,K,EAIpBkD,oBAAsB,WACpB,EAAKL,SAAS,CACZQ,eAAgB,K,uDAnBpB,WAAqB,IAAD,OAClBC,YAAW,WFAyB1B,EAAQ,UAC7CG,MAAK,SAAAC,GAAQ,OAAIA,KECXD,MAAK,SAAA9C,GAAK,OAAI,EAAK4D,SAAS,CAAE5D,MAAOA,EAAM6D,YAC7C,O,oBAmBL,WACE,MAAkCH,KAAKpD,MAA/BN,EAAR,EAAQA,MAAOoE,EAAf,EAAeA,eAEf,OACE,yBAAKvD,UAAU,OACb,yBAAKA,UAAU,gBAEXb,EAAMsE,OACF,kBAAC,EAAD,CAAUtE,MAAOA,EAAOC,UAAWyD,KAAKzD,YACxC,kBAACsE,EAAA,EAAD,OAIR,yBAAK1D,UAAU,gBACb,yBAAKA,UAAU,0BAEXuD,EAEI,kBAAC,EAAD,CACE/B,OAAQ+B,EACRH,oBAAqBP,KAAKO,sBAI5B,8BACE,yBACEpD,UAAU,YAEV2D,IAAI,iGACJC,IAAI,cAEN,wD,GA5DF3E,IAAMoE,WCLxBQ,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.079bb408.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from '@material-ui/core';\nimport classNames from 'classnames';\n\nimport './TodoList.scss';\n\nexport const TodoList = React.memo(({ todos, setUserId }) => {\n  const [state, updateState] = useState(\n    {\n      todosFromServer: todos,\n      title: '',\n      filterBy: '',\n    },\n  );\n\n  const { todosFromServer, title, filterBy } = state;\n\n  const todosForDisplay = todosFromServer.filter(todo => (\n    typeof filterBy !== 'boolean'\n      ? todo.title.includes(title)\n      : todo.title.includes(title) && todo.completed === filterBy\n  ));\n\n  return (\n\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n      <div className=\"TodoList__controlers\">\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Search for ...\"\n          variant=\"outlined\"\n          value={state.title}\n          onChange={event => updateState({\n            ...state, title: event.target.value,\n          })}\n        />\n        <FormControl\n          variant=\"outlined\"\n          style={{ width: 150 }}\n        >\n          <InputLabel id=\"demo-simple-select-outlined-label\">\n            Filter By\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            label=\"Filter By\"\n            value={state.filterBy}\n            onChange={event => updateState({\n              ...state, filterBy: event.target.value,\n            })}\n          >\n            <MenuItem value=\"all\">All</MenuItem>\n            <MenuItem value>Completed</MenuItem>\n            <MenuItem value={false}>Active</MenuItem>\n          </Select>\n        </FormControl>\n\n        <button\n          type=\"button\"\n          style={{ width: 150 }}\n          onClick={() => updateState({\n            ...state,\n            todosFromServer: todos.sort((a, b) => Math.random() - 0.5),\n          })}\n        >\n          Randomize\n        </button>\n      </div>\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {\n            todosForDisplay.map((todo) => {\n              const { completed, userId, title: todoTitle, id } = todo;\n\n              return (\n                <li\n                  key={id}\n                  className={classNames(\n                    'TodoList__item',\n                    {\n                      'TodoList__item--checked': completed,\n                      'TodoList__item--unchecked': !completed,\n                    },\n                  )\n                  }\n                >\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      name=\"completed\"\n                      checked={completed}\n                      onChange={() => {\n                        // eslint-disable-next-line\n                        todo.completed = !completed;\n                        updateState({\n                          ...state, todosFromServer: todos,\n                        });\n                      }}\n                    />\n                    <p>{todoTitle}</p>\n                  </label>\n                  <button\n                    type=\"button\"\n                    className=\"\n                      TodoList__user-button\n                      TodoList__user-button--selected\n                      button\n                    \"\n                    onClick={() => setUserId(userId)}\n                  >\n                    User&nbsp;#\n                    {userId}\n                  </button>\n                </li>\n              );\n            })\n          }\n        </ul>\n      </div>\n    </div>\n  );\n});\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  setUserId: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nconst request = endPoint => fetch(`${BASE_URL}${endPoint}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error('404 (Not Found)');\n    }\n\n    if (!response.headers.get('content-type').includes('application/json')) {\n      throw new Error('no compatible data');\n    }\n\n    return response.json();\n  })\n  .catch(error => error);\n\nexport const getTodosFromServer = () => request('/todos')\n  .then(response => response);\n\nexport const getUserFromServer = userId => request(`/users/${userId}`)\n  .then(response => response);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CurrentUser.scss';\nimport { getUserFromServer } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  async componentDidMount() {\n    const { userId } = this.props;\n    const user = await getUserFromServer(userId);\n\n    this.setState({ user: user.data });\n  }\n\n  async componentDidUpdate(prevProps) {\n    const { userId } = this.props;\n\n    if (prevProps.userId === userId) {\n      return;\n    }\n\n    const user = await getUserFromServer(userId);\n    // eslint-disable-next-line\n    this.setState({ user: user.data });\n  }\n\n  render() {\n    const { id, name, email, phone } = this.state.user || '';\n\n    return (\n      <>\n        {\n          this.state.user && (\n            <div className=\"CurrentUser\">\n              <h2 className=\"CurrentUser__title\">\n                <span>\n                  Selected user:\n                  {id}\n                </span>\n              </h2>\n              <h3 className=\"CurrentUser__name\">{name}</h3>\n              <p className=\"CurrentUser__email\">{email}</p>\n              <p className=\"CurrentUser__phone\">{phone}</p>\n              <button\n                type=\"button\"\n                className=\"CurrentUser__clear\"\n                onClick={this.props.clearSelectedUserId}\n              >\n                Clear\n              </button>\n            </div>\n          )\n        }\n      </>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearSelectedUserId: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { LinearProgress } from '@material-ui/core';\n\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodosFromServer } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      getTodosFromServer()\n        .then(todos => this.setState({ todos: todos.data }));\n    }, 2000);\n  }\n\n  setUserId = (id) => {\n    if (this.state.userId === id) {\n      return;\n    }\n\n    this.setState({\n      selectedUserId: id,\n    });\n  }\n\n  clearSelectedUserId = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {\n            todos.length\n              ? <TodoList todos={todos} setUserId={this.setUserId} />\n              : <LinearProgress />\n          }\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {\n              selectedUserId\n                ? (\n                  <CurrentUser\n                    userId={selectedUserId}\n                    clearSelectedUserId={this.clearSelectedUserId}\n                  />\n                )\n                : (\n                  <span>\n                    <img\n                      className=\"icon-user\"\n                      // eslint-disable-next-line\n                      src=\"https://as1.ftcdn.net/v2/jpg/02/47/24/66/1000_F_247246603_CKyITrdJiCdtQ3pesJhsVWfMRGc20af2.jpg\"\n                      alt=\"icon-user\"\n                    />\n                    <h2>No user selected</h2>\n                  </span>\n                )\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}